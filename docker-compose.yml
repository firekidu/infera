version: "3.9"
services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 3s
      retries: 10

  langflow:
    image: ghcr.io/langflow-ai/langflow:latest
    environment:
      - PORT=7860
    ports:
      - "7860:7860"

  api:
    build: ./apps/api
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - PORT=${PORT_API}
      - DATABASE_URL=${DATABASE_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL}
      - OPENAI_MODEL=${OPENAI_MODEL}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - OPENROUTER_BASE_URL=${OPENROUTER_BASE_URL}
      - OPENROUTER_MODEL=${OPENROUTER_MODEL}
      - OPENROUTER_HTTP_REFERER=${OPENROUTER_HTTP_REFERER}
      - OPENROUTER_TITLE=${OPENROUTER_TITLE}
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL}
      - OLLAMA_MODEL=${OLLAMA_MODEL}
      - LANGFLOW_URL=${LANGFLOW_URL}
    ports:
      - "${PORT_API}:3001"

  web:
    build: ./apps/web
    depends_on:
      - api
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    ports:
      - "${PORT_WEB}:3000"

volumes:
  db_data:
